async function startDb() {
    try {
        db.connect()
            .then(() => dropTables())
            .then(() => createTables())
            .then(() => createInitialUsers())
            .then(() => createInititialUserPrefs()) 
            .then(() => testDB())
            .finally(() => db.end()
            );

    } catch (error) {
        console.error(chalk.red("Error during startDB"));
        throw error;
    };

};

startDb();

import React, { useState, useEffect } from 'react';
import axios from 'axios';
import { Form, Input, Radio, Button, Modal } from 'semantic-ui-react'

import './EditProfile.css';

const EditProfile = ({
    editProfileShow,
    editProfileSetShow,
    user,
    setUser
}) => {

    console.log('Logged-in User: ', user);
    const { firstname, lastname, userPreferences } = user;

    if (!user.user_id) {
        return <div>Loading...</div>;
    };

    const handleChange = (e, param) => {
        console.log('Handle Change', param.value)
        setShipping(param.value)
    };

    const handleClose = () => { editProfileSetShow(false) };

    const editUserProfile = () => {
        console.log('In edit user preferences!!')

        console.log('Edit User Preferences is being called!');
        axios.patch(`/api/userprefs/${ user.user_id }`, { firstname, lastname, street: streetAddress, city, state, zip, shipping })
            .then(res => {
                console.log('New User Profile: ', res.data);
                setUser(res.data.user);
            })
            .catch(error => {
                console.error('Error updating user preferences!', error);
            });
    };

    return (
        <div>
            <Modal open={editProfileShow} size='small'>
                <Modal.Header className='edit-profile-header'
                    style={{
                        backgroundColor: 'olivedrab',
                        color: 'white',
                        borderBottom: '2px solid black'
                    }}>Edit Your User Profile</Modal.Header>
                <Modal.Content
                    style={{
                        backgroundColor: 'lightgrey'
                    }}>
                    <Form>
                        <Form.Group widths='equal'>
                            <Form.Field required>
                                <label>First Name:</label>
                                <Input
                                    type='text'
                                    placeholder='First Name'
                                    style={{
                                        border: '1px solid black',
                                        borderRadius: '5px'
                                    }}
                                    onChange={event => setFirstname(event.target.value)}
                                    value={firstname}
                                />
                            </Form.Field>
                            <Form.Field required>
                                <label>Last Name:</label>
                                <Input
                                    type='text'
                                    placeholder='Last Name'
                                    style={{
                                        border: '1px solid black',
                                        borderRadius: '5px'
                                    }}
                                    onChange={event => setLastname(event.target.value)}
                                    value={lastname}
                                />
                            </Form.Field>
                        </Form.Group>
                        <Form.Field required>
                            <label>Street Address:</label>
                            <Input
                                type='text'
                                placeholder='Street Address'
                                style={{
                                    border: '1px solid black',
                                    borderRadius: '5px'
                                }}
                                onChange={event => setStreetAddress(event.target.value)}
                                value={streetAddress}
                            />
                        </Form.Field>
                        <Form.Group widths='equal'>
                            <Form.Field required>
                                <label>City:</label>
                                <Input
                                    type='text'
                                    placeholder='City'
                                    style={{
                                        border: '1px solid black',
                                        borderRadius: '5px'
                                    }}
                                    onChange={event => setCity(event.target.value)}
                                    value={city}
                                />
                            </Form.Field>
                            <Form.Field required>
                                <label>State:</label>
                                <Input
                                    type='text'
                                    placeholder='State'
                                    style={{
                                        border: '1px solid black',
                                        borderRadius: '5px'
                                    }}
                                    onChange={event => setState(event.target.value)}
                                    value={state}
                                />
                            </Form.Field>
                            <Form.Field required>
                                <label>Zip Code:</label>
                                <Input
                                    type='zip code'
                                    placeholder='Zip Code'
                                    name='zip'
                                    type='text'
                                    inputMode='numeric'
                                    // pattern='^(?(^00000(|-0000))|(\d{5}(|-\d{4})))$'
                                    style={{
                                        border: '1px solid black',
                                        borderRadius: '5px'
                                    }}
                                    onChange={event => setZip(event.target.value)}
                                    value={zip}
                                />
                            </Form.Field>
                        </Form.Group>
                        <Form.Group required inline>
                            <label>Shipping Preference:</label>
                            <Radio
                                label='USPS'
                                value='USPS'
                                checked={shipping === 'USPS'}
                                onClick={handleChange}
                                style={{ padding: '0 5px' }}
                            />
                            <Radio
                                label='UPS'
                                value='UPS'
                                checked={shipping === 'UPS'}
                                onClick={handleChange}
                                style={{ padding: '0 5px' }}
                            />
                            <Radio
                                label='FedEx'
                                value='FedEx'
                                checked={shipping === 'FedEx'}
                                onClick={handleChange}
                                style={{ padding: '0 5px' }}
                            />
                        </Form.Group>
                    </Form>
                </Modal.Content>
                <Modal.Actions
                    style={{
                        backgroundColor: 'darkgrey',
                        color: 'white',
                        borderTop: '2px solid black'
                    }}>
                    <Button negative
                        style={{
                            boxShadow: '3px 3px 5px black'
                        }}
                        onClick={
                            function (event) {
                                clearForm();
                                handleClose();
                            }
                        }
                    >
                        Cancel
                    </Button>
                    <Button
                        positive
                        icon='checkmark'
                        labelPosition='right'
                        content='Submit'
                        style={{
                            backgroundColor: 'olivedrab',
                            boxShadow: '3px 3px 5px black'
                        }}
                        onClick={
                            (event) => {
                                handleClose();
                            }
                        }
                    />
                </Modal.Actions>
            </Modal>
        </div>
    )
}

export default EditProfile;

usersRouter.get('/:userId', requireUser, async (req, res, next) => {
    const { userId } = req.params;
    user = req.user;
    console.log('User Object: ', user);

    if (user && user.user_id === Number(userId)) {
        try {
            const user = await getUserByUserId(userId);
            res.send({
                message: 'Here is the fetched user!',
                user,
                status: true
            })
        } catch ({ name, message }) {
            next({ name, message })
        };    
    }
});
